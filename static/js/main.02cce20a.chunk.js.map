{"version":3,"sources":["components/container/Container.js","components/notification/Notification.js","components/statistics/Statistics.js","components/feedbackOptions/FeedbackOptions.js","components/section/Section.js","App.js","index.js","components/feedbackOptions/FeedbackOptions.module.css","components/container/Container.module.css","components/section/Section.module.css"],"names":["Container","children","className","s","container","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","feedbackOptions","map","option","button","type","onClick","Section","title","section","App","useState","setGoodFeedback","setNeutralFeedback","setBadFeedback","countTotalFeedback","target","dataset","feedback","prevState","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qQAMeA,MAJf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,OCOxBI,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAIA,KCmCEC,EAhCI,SAAC,GAAD,IACfC,EADe,EACfA,KACAC,EAFe,EAEfA,QACAC,EAHe,EAGfA,IACAC,EAJe,EAIfA,MACAC,EALe,EAKfA,mBALe,OAOjB,mCACGD,EAAQ,EACT,+BACM,+BAAI,cAAC,IAAD,IAAJ,eAA4BH,KAC5B,+BAAI,cAAC,IAAD,IAAJ,iBAAgCC,KAChC,+BAAI,cAAC,IAAD,IAAJ,cAAyBC,KACzB,+BAAI,cAAC,IAAD,IAAJ,gBAAkCC,KAClC,uDAA0BC,EAA1B,UAGJ,cAAC,EAAD,CAAcN,QAAQ,yB,gBCEbO,EArBS,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,gBACjC,OAAO,qBAAKb,UAAWC,IAAEa,gBAAlB,SACJF,EAAQG,KAAI,SAAAC,GAAM,OACjB,wBACEhB,UAAWC,IAAEgB,OACbC,KAAK,SACL,gBAAeF,EACfG,QAASN,EAJX,SAOGG,GAFIA,S,gBCGEI,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOtB,EAAV,EAAUA,SAAV,OACZ,sBAAKC,UAAaC,IAAEqB,QAApB,UACA,6BAAKD,IACJtB,MCECa,EAAU,CAAC,OAAQ,UAAW,OAErB,SAASW,IACtB,MAAgCC,mBAAS,GAAzC,mBAAOlB,EAAP,KAAamB,EAAb,KACA,EAAsCD,mBAAS,GAA/C,mBAAOjB,EAAP,KAAgBmB,EAAhB,KACA,EAA8BF,mBAAS,GAAvC,mBAAOhB,EAAP,KAAYmB,EAAZ,KAGMC,EAAqB,WACzB,OAAOtB,EAAOC,EAAUC,GA8B1B,OACE,eAAC,EAAD,WACI,cAAC,EAAD,CAASa,MAAO,wBAAhB,SACA,cAAC,EAAD,CACET,QAASA,EACTC,gBA3Be,SAAC,GAGtB,OAHqC,EAAbgB,OACIC,QAApBC,UAGN,IAAK,OACHN,GAAgB,SAAAO,GAAS,OAAIA,EAAY,KACzC,MAEF,IAAK,UACHN,GAAmB,SAAAM,GAAS,OAAIA,EAAY,KAC5C,MAEF,IAAK,MACHL,GAAe,SAAAK,GAAS,OAAIA,EAAY,KACxC,MAEF,QACE,aAaA,cAAC,EAAD,CAASX,MAAO,aAAhB,SACA,cAAC,EAAD,CACEf,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOmB,IACPlB,mBAzCgC,WACtC,IAAID,EAAQmB,IACZ,OAAOnB,EAAQwB,KAAKC,MAAO5B,EAAOG,EAAS,KAAO,EAuCxB0B,UCtD9BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACf,EAAD,MAEFgB,SAASC,eAAe,U,kBCV1BC,EAAOC,QAAU,CAAC,OAAS,kC,kBCA3BD,EAAOC,QAAU,CAAC,UAAY,+B,kBCA9BD,EAAOC,QAAU,CAAC,QAAU,4B","file":"static/js/main.02cce20a.chunk.js","sourcesContent":["import s from \"./Container.module.css\";\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;","import PropTypes from 'prop-types';\r\n\r\nfunction Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import React from 'react';\r\nimport { ImHappy, ImNeutral, ImSad, ImCalculator } from \"react-icons/im\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Notification from '../notification/Notification';\r\n\r\nconst Statistics = ({\r\n    good,\r\n    neutral,\r\n    bad,\r\n    total,\r\n    positivePercentage\r\n}) => ( \r\n  <>\r\n    {total > 0 ? \r\n   (<ul>\r\n          <li><ImHappy /> -- Good:   {good}</li>\r\n          <li><ImNeutral /> -- Neutral:  {neutral}</li>\r\n          <li><ImSad /> -- Bad:   {bad}</li>\r\n          <li><ImCalculator /> -- Total:   {total}</li>\r\n          <li>Positive feedback:   {positivePercentage}%</li>\r\n    </ul>) \r\n    :\r\n    ( <Notification message=\"No feedback given\" />)\r\n    }\r\n  </>\r\n  );\r\n\r\n  Statistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({options, onLeaveFeedback}) => {\r\n  return <div className={s.feedbackOptions}>\r\n    {options.map(option => (\r\n      <button\r\n        className={s.button}\r\n        type=\"button\"\r\n        data-feedback={option}\r\n        onClick={onLeaveFeedback}\r\n        key={option}\r\n      >\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </div>\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import PropTypes from \"prop-types\";\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n    <div className = {s.section}>\r\n    <h2>{title}</h2>\r\n    {children}\r\n    </div>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;","//import './App.css';\nimport React, { useState } from 'react';\n\nimport Container from './components/container/Container';\nimport Statistics from './components/statistics/Statistics';\nimport FeedbackOptions from './components/feedbackOptions/FeedbackOptions';\nimport Section from './components/section/Section';\n\nconst options = ['good', 'neutral', 'bad'];\n\nexport default function App() {\n  const [good, setGoodFeedback] = useState(0);\n  const [neutral, setNeutralFeedback] = useState(0);\n  const [bad, setBadFeedback] = useState(0);\n\n  \n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    let total = countTotalFeedback();\n    return total ? Math.round((good / total) * 100) : 0;\n  };\n\n  const handleFeedback = ({ target }) => {\n    const { feedback } = target.dataset;\n\n    switch (feedback) {\n      case 'good':\n        setGoodFeedback(prevState => prevState + 1);\n        break;\n\n      case 'neutral':\n        setNeutralFeedback(prevState => prevState + 1);\n        break;\n\n      case 'bad':\n        setBadFeedback(prevState => prevState + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n\n  return (\n    <Container>\n        <Section title={'Please leave feedback'}>\n        <FeedbackOptions\n          options={options}\n          onLeaveFeedback={handleFeedback}\n        />\n        </Section>\n        <Section title={'Statistics'}>\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback()}\n          positivePercentage={countPositiveFeedbackPercentage()}\n        />\n        </Section>\n     </Container>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1gLnB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2-QOw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3GhnP\"};"],"sourceRoot":""}